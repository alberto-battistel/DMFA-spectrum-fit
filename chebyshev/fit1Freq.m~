


fstep = 1/(length(Bfft)*Tinterval);

l = f(1)/fstep +1+ (-npoints/2:npoints/2-1);
y2fit = double(Bfft(l));


% x for the basis functions
xVec = @(L,norm) (-L/2:L/2-1)/norm;
%xBasFun0 = xVec(LBasFun0, LBasFun0/2);


n = 10;
LBasFun = 50;
xBasFun = xVec(LBasFun, LBasFun/2);
basFun = myChebyshevPoly(n, xBasFun);


BasFun = fftshift(fft(basFun, [], 2), 2)/LBasFun;

fun = @(c) real(BasFun).'*c(:,1) + 1j*imag(BasFun).'*c(:,2);
chi2 = @(c) sum( (real(fun(c)) - real(y2fit)).^2 + (imag(fun(c)) - imag(y2fit)).^2 );

c0 = zeros(n+1,2);

% fitting options
options = optimoptions(@fminunc,'display', 'iter','TolFun', 1e-10, 'TolX', 1e-10, 'Algorithm', 'quasi-newton');

% fitting
cf = fminunc(@(c) chi2(c), c0, options);

% plot
yfit = fun(cf);

figure(1)
clf
plot(real(y2fit))